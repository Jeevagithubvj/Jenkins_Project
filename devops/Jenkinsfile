pipeline {
    agent any
    stages {
        stage('Git Webhook Checkout') {
            steps {
                 sh 'echo "Git checkout passed"'
            }
        }
        stage('Specific Build for Specific Branch') {
            when {
                expression {
                    env.BRANCH_NAME == 'devops_project'
                }
            }
            steps {
                echo 'Build started for devops_project branch'
            }
        }
        stage('Compile') {
            steps {
                sh 'cd devops/ && mvn compile'
            }
        }
        stage('Test') {
            steps {
                sh 'cd devops/ && mvn test'
            }
        }
        stage('Build') {
            steps {
                sh 'cd devops/ && mvn clean install'
            }
        }
        stage('Static Code Analysis') {
            steps {
                withSonarQubeEnv('sonarqubeserver') {
                    sh 'cd devops/ && mvn sonar:sonar'
                }
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                script {
                    def dockerImage = "jeeva1235/cicd:${env.BUILD_NUMBER}"
                    sh "cd devops/ && docker build -t ${dockerImage} ."
                    docker.withRegistry('https://index.docker.io/v1/', 'docker_cred') {
                        docker.image(dockerImage).push()
                    }
                }
            }
        }
        stage('Update GitHub Repository with Manifest') {
            environment {
                GIT_CREDENTIALS_ID = 'git-cred'
                GIT_REPO_URL = 'https://github.com/Jeevagithubvj/Jenkins_Project.git'
                GIT_BRANCH = 'devops_project'
            }
            steps {
                script {
                    sh '''
                        git clone ${GIT_REPO_URL}
                        cd Jenkins_Project
                        git checkout ${GIT_BRANCH}
                    '''
                    
                    sh '''
                        sed -i 's|image: jeeva1235/cicd:.*|image: jeeva1235/cicd:${BUILD_NUMBER}|g' manifest.yaml
                    '''
                    
                    sh '''
                        git config user.email "jeeva.v.devops@gmail.com"
                        git config user.name "vijay"
                        git add manifest.yaml
                        git commit -m "Update manifest with Docker image tag ${BUILD_NUMBER}"
                        git push origin ${GIT_BRANCH}
                    '''
                }
            }
        }
    }
}
